{"version":3,"sources":["components/Header.js","components/ParkingCard.js","components/ParkingSlot.js","components/ParkingNewCard.js","components/ParkingSlots.js","components/Parking.js","index.js"],"names":["Header","props","className","title","subtitle","defaultProps","ParkingCard","Card","CardActions","disableSpacing","IconButton","aria-label","onClick","e","favorites","includes","slot","handleFavDelete","handleAddFavorite","fontSize","style","fill","handleDeleteAnOption","CardContent","Typography","variant","color","component","ParkingSlot","slotValue","ParkingNewCard","height","width","handleNewOption","TextareaAutosize","rowsMin","rowsMax","textAlign","alignContent","placeholder","onChange","target","value","ParkingSlots","this","slots","length","map","index","showNewCard","addNewCard","React","Component","Parking","removeAllOptions","bind","addNewOption","removeAnOption","addNewFavorite","removeFavorite","state","jsonSlots","localStorage","getItem","JSON","parse","jsonFavorites","setState","prevState","json","stringify","setItem","optionToRemove","filter","favoriteToRemove","favorite","Number","indexOf","sortSlots","splice","_","sortedIndex","concat","handleDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9430e386.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = (props) =>(\n        <div className=\"header\">\n            <div className=\"container\">\n                <h1 className=\"header__title\">{props.title}</h1>\n                {props.subtitle && <h2 className= \"header__subtitle\">{props.subtitle}</h2>}\n            </div>\n        </div>\n    )\n\n\nHeader.defaultProps = {\n    title : 'Parking App!!!'\n}\n\nexport default Header;","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport StarIcon from '@material-ui/icons/Star';\nimport StarOutlineIcon from '@material-ui/icons/StarOutline';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\n\n\n\nexport default function ParkingCard(props) {\n\n    const handleAddFavorite = () =>{\n        if (!props.favorites.includes(props.slot)){\n            props.handleAddFavorite(props.slot)\n        }\n        else{\n            props.handleFavDelete(props.slot)\n        }\n    }\n  \n  return (\n    <Card>\n        <CardActions disableSpacing>\n        <IconButton aria-label=\"add to favorites\" onClick={(e) => {handleAddFavorite()}}>\n           {(!props.favorites.includes(props.slot)) && <StarOutlineIcon fontSize=\"large\"/> }\n           {(props.favorites.includes(props.slot)) && <StarIcon style={{ fill: \"green\" , fontSize:\"large\"}}/> } \n    \n        </IconButton>\n        <IconButton aria-label=\"remove\" slot='10' onClick={(e) => {props.handleDeleteAnOption(props.slot)}}>\n            {(!props.favorites.includes(props.slot)) && <RemoveCircleIcon style={{ fill: \"red\" , fontSize:\"large\"}}/> }\n        </IconButton>\n      </CardActions>\n      \n      <CardContent>\n        <Typography variant=\"h1\" color=\"textSecondary\" component=\"p\">\n          {props.slot}\n        </Typography>\n        \n        \n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n        {props.slot === 1 ? 'day' : 'days'}\n        </Typography>\n\n      </CardContent>\n      \n      \n    </Card>\n  );\n}\n","import React from 'react';\nimport ParkingCard from './ParkingCard'\n\n\nconst ParkingSlot = (props) =>(\n        <div className=\"option\">\n            <ParkingCard \n                slot={props.slot} \n                handleDeleteAnOption={props.handleDeleteAnOption}\n                handleFavDelete = {props.handleFavDelete}\n                handleAddFavorite = {props.handleAddFavorite}\n                favorites={props.favorites}\n            ></ParkingCard>\n        </div>\n    )\n\n\nexport default ParkingSlot","import React from 'react';\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';    \nimport Typography from '@material-ui/core/Typography';\nimport TextareaAutosize from '@material-ui/core/TextareaAutosize'\n\nlet slotValue = 0;\n\n\nexport default function ParkingNewCard(props) {\n  \n    const addNewOption = (slot) => {\n        props.handleNewOption(slotValue)\n        slotValue = 0;\n    }\n\n  return (\n    <Card style={{height: \"150px\", width: \"100px\"}} onClick={(e) => {addNewOption(slotValue)}}>\n      <CardContent>\n        <TextareaAutosize aria-label=\"empty textarea\" \n            rowsMin={1} \n            rowsMax={1}\n            style={{height: \"50px\", width: \"50px\", textAlign: \"center\", alignContent: \"center\"}}\n            placeholder={props.slot} \n            onChange={(e) => {slotValue = e.target.value}}/>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n          days\n        </Typography>\n      </CardContent>\n    </Card>\n  )\n}\n","import React from 'react';\nimport ParkingSlot from './ParkingSlot'\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport ParkingNewCard from './ParkingNewCard';\nimport ReactCSSTransitionGroup from 'react-addons-css-transition-group';\n\nexport default class ParkingSlots extends React.Component{\n\n    componentDidUpdate(){\n        <ReactCSSTransitionGroup component={ParkingSlot}\n                                transitionName=\"fade\"\n                                transitionEnterTimeout={100}\n                                transitionLeaveTimeout={100}>\n         </ReactCSSTransitionGroup>                            \n    }\n   \n\n    render(){\n     return(\n            <div className=\"container\">  \n                {this.props.slots.length === 0 && <p className = \"widget__message\">Please add a slot to get started !!</p>}\n                <div className=\"grid-container\">\n                    {this.props.slots.map((slot,index) => \n                        <div className=\"grid-item\">\n                            <ParkingSlot \n                                handleDeleteAnOption={this.props.handleDeleteAnOption} \n                                handleFavDelete = {this.props.handleFavDelete}\n                                handleAddFavorite = {this.props.handleAddFavorite}\n                                key={index + 1} \n                                index={index + 1} \n                                slot={slot}\n                                favorites={this.props.favorites}\n                            >\n                            </ParkingSlot>\n                        </div>\n                    )}\n                    <div className=\"new-grid-item grid-item\">\n                        {this.props.showNewCard && <ParkingNewCard handleNewOption = {this.props.handleNewOption}/>}\n                        {!this.props.showNewCard && <AddCircleIcon style={{fill: \"green\"}} onClick={(e) => {this.props.addNewCard()}}/>}\n                    </div>\n                </div>\n            </div>\n    )\n}\n}\n","import React from 'react'\nimport Header from './Header'\nimport ParkingSlots from './ParkingSlots'\nimport Card from '@material-ui/core/Card';\nimport CardContent from '@material-ui/core/CardContent';\nimport _ from 'lodash';\n\nclass Parking extends React.Component{\n    constructor(props){\n        super(props);\n        this.removeAllOptions = this.removeAllOptions.bind(this);\n        this.addNewOption = this.addNewOption.bind(this);\n        this.addNewCard = this.addNewCard.bind(this);\n        this.removeAnOption = this.removeAnOption.bind(this);\n        this.addNewFavorite = this.addNewFavorite.bind(this);\n        this.removeFavorite = this.removeFavorite.bind(this);\n        this.state = {\n            slots :[1,5,7,15,30],\n            favorites: [],\n            showNewCard : false\n        }\n    }\n    \n    componentDidMount(){\n        const jsonSlots = localStorage.getItem('slots');\n        const slots = JSON.parse(jsonSlots);\n        const jsonFavorites = localStorage.getItem('favorites');\n        const favorites = JSON.parse(jsonFavorites);\n        const showNewCard = localStorage.getItem('showNewCard')\n        if (slots){\n            this.setState(()=>({slots,favorites,showNewCard}))\n        }\n      \n    }\n\n    componentDidUpdate(prevState){\n        if( prevState.slots.length !== this.state.slots.length){\n            const json = JSON.stringify(this.state.slots);\n            localStorage.setItem('slots',json);\n        }\n        if( prevState.favorites.length !== this.state.favorites.length){\n            const json = JSON.stringify(this.state.favorites);\n            localStorage.setItem('favorites',json);\n        }\n        if( prevState.showNewCard !== this.state.showNewCard){\n            localStorage.setItem('showNewCard',this.state.showNewCard);\n        }\n    }   \n\n    removeAllOptions(){\n        this.setState(() => ({slots :[]}))\n    }\n\n    removeAnOption(optionToRemove){\n     \n        this.setState((prevState)=>({\n            slots: prevState.slots.filter((slot) => {\n                return optionToRemove !== slot;\n                }) \n            }))\n        \n    }\n\n    removeFavorite(favoriteToRemove){\n     \n        this.setState((prevState)=>({\n            favorites: prevState.favorites.filter((favorite) => {\n                return favoriteToRemove !== favorite;\n                }) \n            }))\n        \n    }\n\n\n    addNewOption(slot){\n        slot = Number(slot)\n        if (!slot || slot === 0 ){\n            return 'Enter a valid slot';\n        }\n        else if (this.state.slots.indexOf(slot) > -1 ){\n            return 'This slot already exists';\n        }\n        const sortSlots = this.state.slots\n        sortSlots.splice(_.sortedIndex(sortSlots,slot) ,0,slot)\n        this.setState((prevState) =>  ({slots : sortSlots,\n                                        favorites : prevState.favorites.concat(slot), \n                                        showNewCard : !prevState.showNewCard}))\n        \n    }\n\n    addNewFavorite(favorite){\n        \n        if (!favorite){\n            return 'Enter a valid slot';\n        }\n        else if (this.state.favorites.indexOf(favorite) > -1 ){\n            return 'This favorite is already set';\n        }\n\n        this.setState((prevState) =>  ({favorites : prevState.favorites.concat(favorite)}))\n        \n    }\n\n    addNewCard(){\n        \n        this.setState((prevState) =>  ({showNewCard : !prevState.showNewCard}))\n        \n    }\n\n\n    render(){\n        const title =  'Parking';\n        const subtitle =  'Planning Period';\n    \n        return (\n            <div>\n                <Header title={title} subtitle={subtitle}/>\n                <Card>\n                    <CardContent>\n                        <ParkingSlots \n                        handleNewOption={this.addNewOption} \n                        handleDelete={this.removeAllOptions}\n                        handleDeleteAnOption={this.removeAnOption} \n                        handleFavDelete = {this.removeFavorite}\n                        handleAddFavorite = {this.addNewFavorite}\n                        addNewCard = {this.addNewCard}\n                        favorites={this.state.favorites}\n                        slots ={this.state.slots}\n                        showNewCard = {this.state.showNewCard}\n                        />\n                    \n                    </CardContent>\n                </Card>\n            </div>\n        )\n    }\n}\n\nParking.defaultProps = {\n    slots : [1,5,7,30],\n    favorites : [],\n    showNewCard : false\n}\n\n\nexport default Parking\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Parking from './components/Parking';\nimport './styles/styles.css'\n\n//localStorage.clear();\nReactDOM.render(<Parking />,document.getElementById('root'));"],"sourceRoot":""}